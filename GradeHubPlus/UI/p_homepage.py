import streamlit as st

from pandas import DataFrame as df
from streamlit_option_menu import option_menu
from GradeHubPlus.Handlers.Global.h_email_notify import GHEmailNotify
from GradeHubPlus.Handlers.Local.h_staff import LHStaff
from GradeHubPlus.Handlers.Local.h_user import LHUser
from GradeHubPlus.Handlers.Local.h_admin import LHAdmin


class HomepageUI:

    def __init__(self, staff_value: str):
        self.staff_h = LHStaff()
        self.user_h = LHUser()
        self.admin_h = LHAdmin()
        self.enotify_h = GHEmailNotify()
        self.staff_value = staff_value

    def logout(self):
        st.session_state['auth_status'] = False
        st.session_state['full_name'] = ''
        st.session_state['username'] = ''
        st.session_state['staff_value'] = ''
        st.session_state['selector_options'] = (
            '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
        )

    def setupUI(self):
        st.sidebar.button(':red[–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞]', on_click=self.logout)
        st.sidebar.write('---')
        st.markdown(
            f'### –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, :red[{st.session_state["full_name"]}]!'
        )

        if self.staff_value == 'Yes':
            self.__staffUI()
        elif self.staff_value == 'Not':
            self.__userUI()
        elif self.staff_value == 'Admin':
            self.__adminUI()
    
    def __staffUI(self):
        # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ ---
        with st.sidebar:
            selected_subjects = st.multiselect(
                '–ü—Ä–µ–¥–º–µ—Ç—ã', options=self.staff_h.all_subjects,
                placeholder='–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ'
            )
            selected_students = st.multiselect(
                '–°—Ç—É–¥–µ–Ω—Ç—ã', options=self.staff_h.all_students,
                placeholder='–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ'
            )
            selected_wtypes = st.multiselect(
                '–¢–∏–ø —Ä–∞–±–æ—Ç—ã', options=self.staff_h.all_wtypes,
                placeholder='–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ'
            )
        
        # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ ---
        df_data = self.staff_h.display_dataframe(
            st.session_state['username'], selected_subjects,
            selected_students, selected_wtypes
        )
        dataframe = df(df_data)
        dataframe.index += 1
        st.dataframe(dataframe, use_container_width=True)

        # --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ ---
        with st.form('form_add_student', clear_on_submit=True):
            st.markdown(':red[–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤]')

            col_name, col_sname, col_course = st.columns(3)
            adst_name = col_name.text_input(
                '–ò–º—è —Å—Ç—É–¥–µ–Ω—Ç–∞', max_chars=64,
                placeholder='–í–≤–µ–¥–∏—Ç–µ –∏–º—è'
            ).strip().capitalize()
            adst_surname = col_sname.text_input(
                '–§–∞–º–∏–ª–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞', max_chars=64,
                placeholder='–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é'
            ).strip().capitalize()
            adst_course = col_course.number_input('–ö—É—Ä—Å (1-5)', 1, 5)
            # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
            adst_directions = st.selectbox(
                '–ò–º–µ—é—â–∏–µ—Å—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
                options=self.staff_h.all_directions, index=0
            )
            # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
            adst_direction = st.text_input(
                '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', max_chars=256, 
                placeholder='–£–∫–∞–∂–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ '+
                '–∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–µ—Ä—Ö—É',
                help='–ö–æ–¥ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
            ).strip()

            if st.form_submit_button(':red[–î–æ–±–∞–≤–∏—Ç—å]'):
                if adst_name != '' and adst_surname != '':
                    if adst_directions == '–£–∫–∞–∑–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ':
                        if adst_direction != '':
                            adst_full_name = f'{adst_name} {adst_surname}'
                            _state = self.staff_h.add_student(
                                adst_full_name, adst_direction, adst_course
                            )
                            if _state['status'] == 'OK':
                                st.toast(_state['note'], icon='‚úîÔ∏è')
                            elif _state['status'] == 'ERROR':
                                st.error(_state['note'], icon='‚ùå')
                        else: st.warning(
                            '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏', icon='‚ö†Ô∏è'
                        )
                    else:
                        adst_full_name = f'{adst_name} {adst_surname}'
                        _state = self.staff_h.add_student(
                            adst_full_name, adst_directions, adst_course
                        )
                        if _state['status'] == 'OK':
                            st.toast(_state['note'], icon='‚úîÔ∏è')
                        elif _state['status'] == 'ERROR':
                            st.error(_state['note'], icon='‚ùå')
                else: st.warning(
                    '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —Å—Ç—É–¥–µ–Ω—Ç–∞', icon='‚ö†Ô∏è'
                )
        
        # --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ ---
        with st.form('form_add_subject', clear_on_submit=True):
            st.markdown(':red[–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞]')

            adsu_subject = st.text_input(
                '–ü—Ä–µ–¥–º–µ—Ç', max_chars=256, 
                placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞'
            ).strip()

            if st.form_submit_button(':red[–î–æ–±–∞–≤–∏—Ç—å]'):
                if adsu_subject != '':
                    _state = self.staff_h.add_subject(adsu_subject)

                    if _state['status'] == 'OK':
                        st.toast(_state['note'], icon='‚úîÔ∏è')
                    elif _state['status'] == 'ERROR':
                        st.error(_state['note'], icon='‚ùå')
                else: st.warning(
                    '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞', icon='‚ö†Ô∏è'
                )
        
        # --- –†–∞–±–æ—Ç–∞ —Å –±–∞–ª–ª–∞–º–∏ ---
        with st.form('form_edit_score', clear_on_submit=True):
            st.markdown(':red[–†–∞–±–æ—Ç–∞ —Å –±–∞–ª–ª–∞–º–∏]')

            edsc_subject = st.selectbox(
                '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç', options=self.staff_h.all_subjects
            )
            edsc_students = st.multiselect(
                '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞', options=self.staff_h.all_students,
                placeholder='–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ'
            )

            col_edsc_mode, col_edsc_wtype, col_edsc_score = st.columns(3)
            edsc_mode = col_edsc_mode.selectbox(
                '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º', options=('–î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–ª—ã', '–í—ã—á–µ—Å—Ç—å –±–∞–ª–ª—ã')
            )
            edsc_wtype = col_edsc_wtype.selectbox(
                '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã', options=self.staff_h.all_wtypes
            )
            edsc_score = col_edsc_score.number_input(
                '–ë–∞–ª–ª—ã (0-100)', 0, 100
            )

            if st.form_submit_button(':red[–í—ã–ø–æ–ª–Ω–∏—Ç—å]'):
                if edsc_students != []:
                    self.staff_h.edit_score(
                        st.session_state['username'], edsc_subject,
                        edsc_students, edsc_mode, edsc_wtype, edsc_score
                    )
                    self.enotify_h.send_score_notify(
                        st.session_state['username'], 
                        edsc_subject, edsc_students
                    )
                    st.toast('–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã –≤ –ë–î', icon='üî•')
                else: st.warning(
                    '–£–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞', icon='‚ö†Ô∏è'
                )

    def __userUI(self):
        # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ ---
        with st.sidebar:
            selected_subjects = st.multiselect(
                '–ü—Ä–µ–¥–º–µ—Ç—ã', options=self.user_h.all_subjects,
                placeholder='–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ'
            )
            selected_staff = st.multiselect(
                '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', options=[el[1] for el in self.user_h.all_staff],
                placeholder='–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ'
            )
            selected_wtypes = st.multiselect(
                '–¢–∏–ø —Ä–∞–±–æ—Ç—ã', options=self.user_h.all_wtypes,
                placeholder='–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ'
            )
        
        # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ ---
        df_data = self.user_h.display_dataframe(
            st.session_state['full_name'], selected_subjects,
            selected_staff, selected_wtypes
        )
        dataframe = df(df_data)
        dataframe.index += 1
        st.dataframe(dataframe, use_container_width=True)

    def __adminUI(self):
        selector_options = (
            '–ö–ª—é—á–∏',
            '–û–ø–æ–≤–µ—â–µ–Ω–∏—è',
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'
        )
        selector_menu = option_menu(
            menu_title='–ì–ª–∞–≤–Ω–∞—è', orientation='horizontal',
            options=selector_options
        )
        

        # –ö–ª—é—á–∏
        if selector_menu == selector_options[0]:
            st.write(
                f'–ö–æ–ª-–≤–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–ª—é—á–µ–π: {self.admin_h.valid_keys_count()}'
            )
            # --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–£–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ ---
            with st.form('form_keys_handler', clear_on_submit=True):
                st.markdown('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–£–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–∞')

                keha_key = st.text_input(
                    '–ö–ª—é—á', max_chars=16, type='password'
                )

                keha_mode = st.radio(
                    '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã', options=['–î–æ–±–∞–≤–∏—Ç—å', '–£–¥–∞–ª–∏—Ç—å'], 
                    horizontal=True
                )

                if st.form_submit_button(':red[–í—ã–ø–æ–ª–Ω–∏—Ç—å]'):
                    if keha_key != '':
                        if keha_mode == '–î–æ–±–∞–≤–∏—Ç—å':
                            keha_state = self.admin_h.create_key(keha_key)
                            if keha_state['status'] == 'OK':
                                st.toast(keha_state['note'], icon='‚úîÔ∏è')
                            elif keha_state['status'] == 'ERROR':
                                st.toast(keha_state['note'], icon='‚ùå')
                        elif keha_mode == '–£–¥–∞–ª–∏—Ç—å':
                            keha_state = self.admin_h.delete_key(keha_key)
                            if keha_state['status'] == 'OK':
                                st.toast(keha_state['note'], icon='‚úîÔ∏è')
                            elif keha_state['status'] == 'ERROR':
                                st.toast(keha_state['note'], icon='‚ùå')
                    else: st.warning('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–ª—é—á', icon='‚ö†Ô∏è')
        
        # –û–ø–æ–≤–µ—â–µ–Ω–∏—è
        elif selector_menu == selector_options[1]:
            # –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞
            # --- –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—á—Ç—É ---
            with st.form('form_send_email', clear_on_submit=True):
                st.markdown(':red[–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—á—Ç—ã]')

                seem_users = st.multiselect(
                    '–ö–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å?', options=self.admin_h.all_users_email
                )
                seem_subject = st.text_input('–ó–∞–≥–æ–ª–æ–≤–æ–∫')
                seem_text = st.text_area('–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ')

                if st.form_submit_button(':red[–û—Ç–ø—Ä–∞–≤–∏—Ç—å]'):
                    if seem_users != [] and seem_subject != '' and seem_text != '':
                        self.enotify_h.send_notify(seem_users, seem_subject, seem_text)
                        st.toast('–ü–∏—Å—å–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã', icon='üî•')
                    else: st.warning('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', icon='‚ö†Ô∏è')
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        elif selector_menu == selector_options[2]:
            radio = st.radio('Mode', options=['users', 'data_changes'])
            df_data = self.admin_h.display_df(radio)
            dataframe = df(df_data)
            dataframe.index += 1
            st.dataframe(dataframe, use_container_width=True)
